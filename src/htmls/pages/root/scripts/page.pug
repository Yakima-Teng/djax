extends ../../../templates/post/template.pug

include ../../../components/mixin-head/component.pug
include ../../../components/mixin-header/component.pug

block site-head
  -var title = 'scripts目录'
  -var desc = ''
  +mixinHead(title, desc)
  link(rel="stylesheet", href="./page.min.css")

block site-header
  +mixinHeader('structure-scripts')

block site-foot
  script(src="./page.min.js")

block site-content
  .container
    .jumbotron
      h1 scripts目录
      p
      p 在scripts目录下有common、libs和utils三个子目录，本文将分别解释这它们的作用。
      p
  
  .container
    .panel.panel-default
      .panel-heading utils目录和common目录
      .panel-body
        p src/scripts/utils下是Djax封装的一些通用方法，可全站使用。下面是一些具体说明和注意事项：
      ul.list-group
        li.list-group-item 1、src/scripts/utils下是Djax套件封装的一些通用方法，是项目无关的，可以通过window.$utils进行调用。
        li.list-group-item 2、src/scripts/common/下以utils-开头的js文件是项目相关的js文件，utils-apis.js用于统一存放api相关的方法，utils-config.js是对$utils封装方法的配置文件，utils-custom.js文件是用户自己对$utils的其他拓展。
        li.list-group-item 3、src/scripts/utils下的js文件和src/scripts/common下以utils-开头的js文件会在打包时被合并成dist/scripts/utils/utils.min.js文件。
        li.list-group-item 4、src/scripts/common下的global.js文件是用户自己的全局js，应该是强项目相关的，打包时会被合并成dist/scripts/common/common.min.js文件。

    .panel.panel-default
      .panel-heading libs目录
      .panel-body
        p src/scripts/libs目录下<strong>原则上</strong>用于存放一些地方方js文件，我们对该文件夹下的js文件进行了一些命名上的约定：[是否被处理].[时间钩子].[合并优先级].[文件名].[是否为压缩文件].js，详细解释如下：
      ul.list-group
        li.list-group-item 1、[是否被处理]：添加了auto、hand标记的文件表示需要在打包时被处理，其他文件不会被拷贝到dist目录；hand标记的文件会被打包成一个dist/scripts/libs/libs-byhand.min.js文件。
        li.list-group-item 2、[时间钩子]：仅适用于添加了auto标记的文件，枚举值有head、doc和lazy，在打包时分别会被打包进dist/scripts/libs目录下的libs-onheadready.min.js、libs-ondocumentready.min.js和libs-onlazy.min.js文件中。
        li.list-group-item 3、[合并优先级]：通过添加00-99（闭区间）这100个数字来标记文件被合并时的优先顺序，数字越小的表示优先级越高，没添加优先级标记的会在最后被合并。
        li.list-group-item 4、[文件名]：就是第三方js文件自己的文件名。
        li.list-group-item 5、[是否为压缩文件]：若为压缩文件，请添加min标记。添加了min标记的文件，Djax套件将不会在打包时对其进行混淆、压缩处理。
